plugins {
    id "groovy"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"

}



version "0.1"
group "movies"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    compileOnly "io.micronaut:micronaut-inject-java"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut.configuration:micronaut-mongo-reactive"
    implementation "io.micronaut:micronaut-runtime-groovy"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-http-client"

    //workaround for gorm
    //check issue to see if resolved https://github.com/grails-core-issues-forks/micronaut-projects-micronaut-groovy-issues-48
    implementation("io.micronaut.configuration:micronaut-mongo-gorm") {
        exclude(group: "org.grails", module: 'grails-datastore-core')
    }

    implementation "org.grails:grails-datastore-core:7.0.5.BUILD-SNAPSHOT"
    implementation "io.micronaut:micronaut-http-server-netty"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testCompileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.1"

    testImplementation "io.micronaut:micronaut-function-web"
    testImplementation "org.testcontainers:spock:1.13.0"
    testRuntimeOnly "io.netty:netty-handler"

    //recommended for integration tests
    testCompile "org.testcontainers:testcontainers:1.14.1"

    //can not compile or implement
    testImplementation("org.mongodb:mongodb-driver-core:4.0.3")
}

test.classpath += configurations.developmentOnly

mainClassName = "movies.Application"

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}


shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

